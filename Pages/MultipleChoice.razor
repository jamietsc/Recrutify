@page "/test/{tid:int}"

@using Recrutify.Models
@using Recrutify.DataAccessLayer.Data
@using Recrutify.DataAccessLayer.Repositories
@inject BewerberTestModel bewerberTestModel

@inject IMultipleChoice<MultipleChoiceModel> multipleChoiceService

<h3>Einstellungstest [Hier Testname einfügen]</h3>

@if (multipleChoiceQuestions == null)
{
    <p>Lade Fragen...</p>
}
else
{
    @foreach (var question in multipleChoiceQuestions)
    {
        <div>
            <p>@question.Text</p>
            <div>
                <input class="form-check-input" type="radio" name="radioField_@question.FID" id="Answer1_@question.FID">
                <label class="form-check-label" for="Answer1_@question.FID">@question.Antwort_1</label>
            </div>
            <div>
                <input class="form-check-input" type="radio" name="radioField_@question.FID" id="Answer2_@question.FID">
                <label class="form-check-label" for="Answer2_@question.FID">@question.Antwort_2</label>
            </div>
            <div>
                <input class="form-check-input" type="radio" name="radioField_@question.FID" id="Answer3_@question.FID">
                <label class="form-check-label" for="Answer3_@question.FID">@question.Antwort_3</label>
            </div>
            <div>
                <input class="form-check-input" type="radio" name="radioField_@question.FID" id="Answer4_@question.FID">
                <label class="form-check-label" for="Answer4_@question.FID">@question.Antwort_4</label>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int tid { get; set; }

    private IEnumerable<MultipleChoiceModel> multipleChoiceQuestions;

    protected override async Task OnInitializedAsync()
    {
        multipleChoiceQuestions = await multipleChoiceService.GetMultipleChoice(tid);
    }
}
